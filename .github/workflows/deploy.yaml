name: deploy-helpr

on:
  push:
    branches:
      - main
    paths:
      - javafx/**
  workflow_dispatch:


permissions:
  contents: write
  packages: write

jobs:
  # TODO: return if the tag already exists
  build-and-release:
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.BYPASS_BRANCH_PROTECTION_TOKEN }}

      - uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: maven

      - name: Extract release version
        id: version
        run: |
          cd javafx

          # Extract POM version
          POM_VERSION=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)

          # Stop workflow if POM_VERSION is 1
          if [ "$POM_VERSION" = "1" ]; then
            echo "POM_VERSION is 1. Stopping workflow."
            exit 1
          fi

          if git tag | grep -q "^v$POM_VERSION-"; then
            echo "Version $POM_VERSION already exists in git tags! Nothing Changed!"
            exit 1
          fi

          # Get commit hash
          COMMIT_HASH=$(git rev-parse --short HEAD)

          # Generate final version string
          VERSION="v${POM_VERSION}-${COMMIT_HASH}"

          # Set as environment variable and output
          echo "POM_VERSION=${POM_VERSION}" >> $GITHUB_ENV
          echo "VERSION=${VERSION}" >> $GITHUB_ENV
          echo "version=${VERSION}" >> $GITHUB_OUTPUT

      - name: Docker Compose
        uses: hoverkraft-tech/compose-action@v2.0.1
        with:
          compose-file: "./javafx/src/main/docker/docker-compose.yaml"
          services: |
            postgres

      - name: Publish package
        run: |
          cd javafx
          mvn --batch-mode --update-snapshots deploy jacoco:report
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Generate SHA1 and MD5
        run: |
          cd javafx/target
          md5sum helpr-*-runner.jar | awk '{print $1}' > helpr-${{ env.POM_VERSION }}-runner.jar.md5
          sha1sum helpr-*-runner.jar | awk '{print $1}' > helpr-${{ env.POM_VERSION }}-runner.jar.sha1

      - name: Generating Release
        run: |
          second_recent_tag=$(git describe --tags --abbrev=0)

          echo "HEAD"
          echo "$second_recent_tag"

          echo "$(git log -1 --pretty=%B | tail -n +3)
          " > RELEASE.txt

          git log "$second_recent_tag"..HEAD --oneline --pretty="%an;%h;%at;%s" | \
          tee logfile.txt | ./scripts/rg.sh >> RELEASE.txt

          cat logfile.txt

          echo "GENERATED RELEASE:"
          cat RELEASE.txt

      - name: Create Tag
        uses: piszmog/create-tag@v1
        with:
          version: ${{ env.VERSION }}
          message: ${{ github.event.inputs.message }}
          token: ${{ secrets.BYPASS_BRANCH_PROTECTION_TOKEN }}

      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          files: |
            javafx/target/helpr-*-runner.jar
            javafx/target/helpr-*-runner.jar.md5
            javafx/target/helpr-*-runner.jar.sha1
          body_path: RELEASE.txt
          tag_name: ${{ env.VERSION }}
          name: Helpr ${{ env.VERSION }}

      - name: Add Code Coverage Badge
        uses: cicirello/jacoco-badge-generator@v2
        with:
          jacoco-csv-file: javafx/target/site/jacoco/jacoco.csv
          badges-directory: hugo/static/badges/${{ env.VERSION }}/
          generate-coverage-badge: false
          generate-branches-badge: true
          branches-badge-filename: coverage.svg
          branches-label: coverage
          generate-summary: true
          intervals: 60 45 20
          colors: green yellow orange red
          on-missing-report: quiet
          generate-workflow-summary: true

      - name: Update latest Badge
        continue-on-error: true
        run: |
          set -e
          mkdir -p hugo/static/badges
          cd hugo/static/badges
          mkdir -p latest
          rm -fr latest/*
          ls -lah
          cp $VERSION/* latest/ || true

      - name: Add and Commit Badge
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: "chore: üéñÔ∏èadd coverage badges"
          file_pattern: hugo/static/badges/**
